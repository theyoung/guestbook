version: 2.1

jobs:
  build-frontend:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: install php
          command: |
            sudo apt install php
            echo php -v
      - run:
          name: phplint env setup
          command: |
            sudo npm i -g phplint
      - run:
          name: check phplint
          command: |
            ./phplint.sh
      - run:
          name: success
          when: on_success
          command: |
            echo 'success php lint'
      - run:
          name: fail
          when: on_fail
          command: |
            echo 'php lint failed'
            exit 1;

  push-frontend:
    machine: true
    steps:
      - checkout
      - run: 
          name : login
          command: |
            echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: docker image build
          command: |
            cd php-redis
            ./run_docker.sh
      - run:
          name: success
          when: on_success
          command: |
            echo 'image upload success'
      - run:
          name: fail
          when: on_fail
          command: |
            echo 'image upload fail'
            exit 1;

  setup-eks:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            yum -y install tar gzip
      - run:
          name: install eksctl
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp  
            mv /tmp/eksctl /usr/local/bin
      - run:
          name: check eks cluster existed
          command: |
            ./check-eks.sh
      - save_cache:
          paths: [.kube/config]
          key: kubeconfig
      - run:
          name: fail
          when: on_fail
          command: |
            echo 'eks setup failed'
  
  deploy-backend:
    docker:
      - image: wernight/kubectl
    steps:
      - checkout
      - restore_cache:
          key: kubeconfig
      - run:
          name: check config and copy and paste
          command: |
            cp -r /root/project/.kube/config /config/.kube/config
      - run:
          name: redis master deployment
          command: |
            kubectl apply -f redis-master-deployment.yaml
      - run:
          name: redis master service
          command: |
            kubectl apply -f redis-master-service.yaml
      - run:
          name: redis slave deployment
          command: |
            kubectl apply -f redis-slave-deployment.yaml
      - run:
          name: redis slave service
          command: |
            kubectl apply -f redis-slave-service.yaml

workflows:
  default:
    jobs:
      # - build-frontend: #checkout php, lint php
      #     filters:
      #       branches:
      #         only: [circleci-project-setup]
      # - push-frontend: #image push
      #     requires: [build-frontend]
      - setup-eks #eks setup
          # requires: [build-frontend, push-frontend]
      - deploy-backend:
          requires: [setup-eks]